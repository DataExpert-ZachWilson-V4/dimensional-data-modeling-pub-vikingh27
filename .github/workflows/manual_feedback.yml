name: Manual PR Review

on:
  workflow_dispatch:
    inputs:
      base_repository:
        description: 'Base repository (owner/repo)'
        required: true
      base_branch:
        description: 'Base branch to compare against'
        required: true
      pr_number:
        description: 'Pull request number'
        required: true

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  check_files:
    name: 'Check files changed'
    runs-on: ubuntu-latest
    outputs:
      all_changed_submission_files: ${{ steps.filtered-changed-files.outputs.all_changed_submission_files }}
      any_submission_changes: ${{ steps.filtered-changed-files.outputs.any_submission_changes }}
    steps:
      - name: Checkout base repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.base_repository }}
          ref: ${{ github.event.inputs.base_branch }}
          token: ${{ secrets.PAT_TOKEN }}
          fetch-depth: 0
      - name: Get all changed files in the submission folder
        id: tj-actions-changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: submission/**
          files_ignore: |
            .github/**/*
            _app/**
            Dockerfile
      - name: Get changed submission files in PR
        id: filtered-changed-files
        run: |
          all_changed_submission_files="${{ steps.tj-actions-changed-files.outputs.all_changed_files }}"
          echo "List of submission files changed in PR: '$all_changed_submission_files'"
          echo "all_changed_submission_files=$all_changed_submission_files" >> $GITHUB_OUTPUT
          any_submission_changes=$(if [ -n "$all_changed_submission_files" ]; then echo 'true'; else echo 'false'; fi)
          echo "Any changes: $any_submission_changes"
          echo "any_submission_changes=$any_submission_changes" >> $GITHUB_OUTPUT

  configure_environment:
    name: 'Configure environment'
    runs-on: ubuntu-latest
    needs: [check_files]
    if: needs.check_files.outputs.any_submission_changes == 'true'
    outputs:
      assignment: ${{ steps.get_variables.outputs.assignment_name }}
      assignment_schema: ${{ steps.get_variables.outputs.schema_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate variables using GitHub context
        id: get_variables
        run: |
          assignment="dimensional-data-modeling" # $(basename "${{ github.event.repository.full_name }}")
          echo "Assignment: $assignment"
          echo "assignment_name=$assignment" >> $GITHUB_OUTPUT
          schema="$(echo "$(basename "${{ github.repository }}")" | tr '-' '_')_${{github.event.inputs.pr_number}}_test"
          echo "Test Schema: $schema"
          echo "schema_name=$schema" >> $GITHUB_OUTPUT

  deploy_application:
    name: 'Deploy application'
    runs-on: ubuntu-latest
    needs: [check_files, configure_environment]
    if: needs.check_files.outputs.any_submission_changes == 'true'
    env:
      SUBMISSION_DIR: 'submission'
      CHANGED_FILES: ${{ needs.check_files.outputs.all_changed_submission_files }}
      ASSIGNMENT: ${{ needs.configure_environment.outputs.assignment }}
      ASSIGNMENT_SCHEMA: ${{ needs.configure_environment.outputs.assignment_schema }}
      PR_NUMBER: ${{ github.event.inputs.pr_number }}
      GITHUB_ORG: ${{ github.event.repository.owner.login }}
      GITHUB_REPO: ${{ github.repository }}
      SECRET_NAME: ${{ secrets.SECRET_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Add GitHub environment variables to '.env' file
        run: env > .env
      - name: Build the Docker image
        run: docker build -t autograding .
      - name: Run the autograding application
        run: docker run --env-file .env --name autograding autograding
